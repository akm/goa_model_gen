package controller

import (
  "time"

	"github.com/groovenauts/blocks-concurrent-batch-server/app"
	"github.com/groovenauts/blocks-concurrent-batch-server/model"
)

<%- types.each do |type| -%>
func <%= type.name %>PayloadToModel(src *app.<%= type.payload_name %>) model.<%= type.name %> {
	if src == nil {
		return model.<%= type.name %>{}
	}
  return model.<%= type.name %>{
<%-
  comments = []

  type.fields.each do |f|
  pf = type.payload.fields.detect{|pf| f.name.underscore == pf.name }
-%>
<%- if pf.nil?
     comments << "#{f.name} no payload field"
  elsif f.custom? -%>
    <%= f.name %>: <%= f.type %>PayloadToModel(src.<%= f.name %>),
<%- elsif pf.optional? -%>
    <%= f.name %>: <%= f.type.camelize %>PointerTo<%= f.type.camelize %>(src.<%= f.name %>),
<%- else -%>
    <%= f.name %>: src.<%= f.name %>,
<%- end -%>
<%- end -%>
<%- comments.each do |comment| -%>
    // <%= comment %>
<%- end -%>
<%- type.payload.field_diffs(type.fields.map{|f| f.name.underscore}).each do |pf| -%>
    // No model field for payload field "<%= pf.name %>"
<%- end -%>
  }
}

func <%= type.name %>ModelToMediaType(src *model.<%= type.name %>) *app.<%= type.media_type_name_for_go %> {
	if src == nil {
		return nil
	}
  return &app.<%= type.media_type_name_for_go %>{
<%-
  type.fields.each do |f|
  pf = type.media_type.fields.detect{|mf| f.name == mf.name.camelize }
-%>
<%- if f.nil? -%>
    // No model field for <%= mf.name.camelize %> ( <%= mf.name %> )
<%- elsif f.custom? -%>
    <%= f.name %>: <%= f.type %>ModelToMediaType(&src.<%= f.name %>),
<%- else -%>
    <%= f.name %>: src.<%= f.name %>,
<%- end -%>
<%- end -%>
<%- type.media_type.field_diffs(type.fields.map{|f| f.name.underscore}).each do |mf| -%>
    // No field for media type field "<%= mf.name %>"
<%- end -%>
  }
}

<%- end -%>
